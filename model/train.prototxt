name: "MDNet"
layer {
  name: 'data'
  type: 'Python'
  top: 'data'
  top: 'label'
  python_param {
    module: 'lib.data_layer.layer'
    layer: 'DataLayer'
    param_str: "'num_class': 49"
  }
}
layer {
  bottom: "data"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu1"
  type: "ReLU"
}
layer {
  bottom: "conv1"
  top: "norm1"
  name: "norm1"
  type: "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  bottom: "norm1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 2
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu2"
  type: "ReLU"
}
layer {
  bottom: "conv2"
  top: "norm2"
  name: "norm2"
  type: "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
layer {
  bottom: "norm2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    kernel_size: 3
    weight_filler{
       type: "gaussian"
	}
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "relu3"
  type: "ReLU"
}
layer {
  bottom: "conv3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "fc4"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc4"
  param {lr_mult: 10}
  param {lr_mult: 20}
  inner_product_param {
    num_output: 512
    weight_filler{
        type: "xavier"
        std: 0.01
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "fc4"
  top: "fc4"
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "fc4"
  top: "fc4"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc5"
  type: "InnerProduct"
  bottom: "fc4"
  top: "fc5"
  param {lr_mult:10}
  param {lr_mult:20}
  inner_product_param {
    num_output: 512
    weight_filler{
   		type: "xavier"
		std: 0.01
	}
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc5"
  top: "fc5"
}
layer {
  name: "drop5"
  type: "Dropout"
  bottom: "fc5"
  top: "fc5"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc5"
  top: "cls_score"
  param {lr_mult: 10}
  param {lr_mult: 20}
  inner_product_param {
    num_output: 98 
    weight_filler {
      type: "xavier"
      std: 0.01
    }
  }
}

layer {
  name: "label_reshape"
  type: "Reshape"
  bottom: "label"
  top: "label_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 1
      dim: 49
      dim: 1
    }
  }
}
layer {
  name: "cls_score_reshape"
  type: "Reshape"
  bottom: "cls_score"
  top: "cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: 49
      dim: 1
    }
  }
}

layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score_reshape"
  bottom: "label_reshape"
  top: "loss_cls"
  loss_weight: 1
}
